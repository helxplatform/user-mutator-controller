apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "user-mutator.fullname" . }}
  labels:
    {{- include "user-mutator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "user-mutator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "user-mutator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "user-mutator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default (printf "v%s" .Chart.AppVersion) }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8443
              scheme: HTTPS
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/user-mutator-config
            {{- range .Values.config.maps }}
            - name: maps
              mountPath: /etc/user-mutator-maps/
            {{- end }}
            {{- range $key, $value := .Values.config.secrets }}
            - name: {{ $key }}-secret
              mountPath: /etc/user-mutator-secrets/{{ $key }}
              readOnly: true
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "user-mutator.fullname" . }}-config
        - name: maps
          projected:
            sources:
            {{- range $key, $value := .Values.config.maps }}
              - configMap:
                  name: {{ $value }}
                  optional: true
                  items:
                    - key: {{ $key }}
                      path: {{ $key }}
            {{- end }}
        {{- range $key, $value := .Values.config.secrets }}
        - name: {{ $key }}-secret
          secret:
            secretName: {{ $value }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
